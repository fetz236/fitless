{"version":3,"file":"sassy-datepicker.cjs.development.js","sources":["../src/util.ts","../src/date-picker/month-picker.tsx","../src/date-picker/date-button.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/date-picker/index.tsx","../src/time-picker/custom-option.tsx","../src/time-picker/custom-select.tsx","../src/time-picker/index.tsx"],"sourcesContent":["const MONTHS: { [key: number]: string } = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December',\n};\n\nexport const getMonthNameFromNumber = (month: number): string => {\n  if (month < 0 || month > 11) {\n    throw new Error(`Invalid month number: ${month}`);\n  }\n  return MONTHS[month];\n};\n\nexport const getDatesOfMonth = (date: Date): { d: Date; active: boolean }[] => {\n  // generate dates of each week of the month including the residue dates\n  // of the last week of previous month and first week of next month\n  const firstDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n  const lastDayOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n  const firstDayOfMonthWeekDay = firstDayOfMonth.getDay();\n  const lastDayOfMonthWeekDay = lastDayOfMonth.getDay();\n\n  const previousMonth = new Date(date.getFullYear(), date.getMonth(), 0);\n  const previousMonthLastDay = new Date(\n    previousMonth.getFullYear(),\n    previousMonth.getMonth() + 1,\n    0\n  );\n\n  const nextMonth = new Date(date.getFullYear(), date.getMonth() + 2, 0);\n\n  const dates: { d: Date; active: boolean }[] = [];\n\n  for (let i = 0; i < firstDayOfMonthWeekDay; i++) {\n    dates.push({\n      d: new Date(\n        previousMonth.getFullYear(),\n        previousMonth.getMonth(),\n        previousMonthLastDay.getDate() - firstDayOfMonthWeekDay + i + 1\n      ),\n      active: false,\n    });\n  }\n\n  for (let i = 0; i < lastDayOfMonth.getDate(); i++) {\n    dates.push({\n      d: new Date(date.getFullYear(), date.getMonth(), i + 1),\n      active: true,\n    });\n  }\n\n  for (let i = 0; i < 6 - lastDayOfMonthWeekDay; i++) {\n    dates.push({\n      d: new Date(nextMonth.getFullYear(), nextMonth.getMonth(), i + 1),\n      active: false,\n    });\n  }\n\n  return dates;\n};\n","import React from 'react';\nimport { getMonthNameFromNumber } from '../util';\n\nexport type MonthPickerProps = {\n  month: number;\n  year: number;\n  nextMonth: () => void;\n  prevMonth: () => void;\n};\n\nconst MonthPicker: React.FC<MonthPickerProps> = ({\n  month,\n  year,\n  nextMonth,\n  prevMonth,\n}) => {\n  return (\n    <div className=\"sdp--month-picker\">\n      <button\n        className=\"sdp--square-btn sdp--square-btn__shadowed\"\n        onClick={prevMonth}\n        aria-label=\"Go to previous month\"\n        type=\"button\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 256 256\"\n        >\n          <rect width=\"256\" height=\"256\" fill=\"none\"></rect>\n          <polyline\n            points=\"160 208 80 128 160 48\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          ></polyline>\n        </svg>\n      </button>\n      <p\n        className=\"sdp--text sdp--month-name\"\n        aria-label={`${getMonthNameFromNumber(\n          month\n        )} ${year} is currently open in Date Picker`}\n        tabIndex={0}\n      >\n        {getMonthNameFromNumber(month)} {year}\n      </p>\n      <button\n        className=\"sdp--square-btn sdp--square-btn__shadowed\"\n        onClick={nextMonth}\n        aria-label=\"Go to next month\"\n        type=\"button\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 256 256\"\n        >\n          <rect width=\"256\" height=\"256\" fill=\"none\"></rect>\n          <polyline\n            points=\"96 48 176 128 96 208\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"24\"\n          ></polyline>\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default MonthPicker;\n","import * as React from 'react';\n\ntype DateButtonProps = {\n  date: Date;\n  active: boolean;\n  selected: boolean;\n  onClick: (date: Date) => void;\n};\n\nconst dateOptions: Intl.DateTimeFormatOptions = {\n  weekday: 'long',\n  month: 'long',\n  day: 'numeric',\n  year: 'numeric',\n};\n\nconst DateButton: React.FC<DateButtonProps> = ({\n  date,\n  active,\n  onClick,\n  selected,\n}) => (\n  <button\n    className={`sdp--square-btn sdp--date-btn ${\n      selected ? 'sdp--date-btn__selected' : ''\n    } sdp--text ${!active ? 'sdp--text__inactive' : ''}`}\n    onClick={() => onClick(date)}\n    tabIndex={active ? 0 : -1}\n    aria-label={`${\n      selected ? 'Currently selected' : 'Select'\n    } ${date.toLocaleDateString('en-US', dateOptions)}`}\n    type=\"button\"\n  >\n    {date.getDate()}\n  </button>\n);\n\nexport default React.memo(\n  DateButton,\n  (p, n) =>\n    p.date.getDay() === n.date.getDay() &&\n    p.active === n.active &&\n    p.selected === n.selected\n);\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\n\nimport MonthPicker from './month-picker';\nimport DateButton from './date-button';\nimport { getDatesOfMonth } from '../util';\n\nimport './styles.css';\n\nexport type DatePickerProps = {\n  /**\n   * This function is called when the selected date is changed.\n   */\n  onChange?: (date: Date) => void;\n  /**\n   * The selected date.\n   */\n  selected?: Date;\n  /**\n   * The minimum date that can be selected (inclusive).\n   */\n  minDate?: Date;\n  /**\n   * The maximum date that can be selected (inclusive).\n   */\n  maxDate?: Date;\n} & React.PropsWithRef<\n  Omit<React.HTMLProps<HTMLDivElement>, 'onChange' | 'selected'>\n>;\n\nconst DatePicker = React.forwardRef<HTMLDivElement, DatePickerProps>(\n  (\n    {\n      onChange,\n      selected = new Date(),\n      minDate = new Date(1900, 0, 1),\n      maxDate,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const minDateVal = minDate.getTime();\n    const maxDateVal =\n      typeof maxDate === 'undefined'\n        ? Number.POSITIVE_INFINITY\n        : maxDate.getTime();\n\n    const [monthDate, setMonthDate] = React.useState<Date>(selected);\n    const [selectedDate, setSelectedDate] = React.useState<Date>(selected);\n\n    const nextMonth = React.useCallback(\n      () =>\n        setMonthDate(d => {\n          const m = d.getMonth();\n          const y = d.getFullYear();\n          if (m === 11) {\n            return new Date(y + 1, 0);\n          } else {\n            return new Date(y, m + 1);\n          }\n        }),\n      []\n    );\n\n    const prevMonth = React.useCallback(\n      () =>\n        setMonthDate(d => {\n          const m = d.getMonth();\n          const y = d.getFullYear();\n          if (m === 0) {\n            return new Date(y - 1, 11);\n          } else {\n            return new Date(y, m - 1);\n          }\n        }),\n      []\n    );\n\n    const setNewSelectedDate = React.useCallback(\n      (date: Date) => {\n        setSelectedDate(date);\n        onChange?.(date);\n      },\n      [onChange, setSelectedDate]\n    );\n\n    // TODO: arrow-keys navigation\n    return (\n      <div\n        className={`sdp ${className ?? ''}`}\n        aria-label=\"Date Picker\"\n        tabIndex={0}\n        ref={ref}\n        {...props}\n      >\n        <MonthPicker\n          month={monthDate.getMonth()}\n          year={monthDate.getFullYear()}\n          nextMonth={nextMonth}\n          prevMonth={prevMonth}\n        />\n        <div className=\"sdp--dates-grid\">\n          <p className=\"sdp--text sdp--text__inactive\">Su</p>\n          <p className=\"sdp--text sdp--text__inactive\">Mo</p>\n          <p className=\"sdp--text sdp--text__inactive\">Tu</p>\n          <p className=\"sdp--text sdp--text__inactive\">We</p>\n          <p className=\"sdp--text sdp--text__inactive\">Th</p>\n          <p className=\"sdp--text sdp--text__inactive\">Fr</p>\n          <p className=\"sdp--text sdp--text__inactive\">Sa</p>\n          {getDatesOfMonth(monthDate).map(({ d, active }) => {\n            const dVal = d.getTime();\n\n            return (\n              <DateButton\n                key={dVal}\n                date={d}\n                active={dVal >= minDateVal && dVal <= maxDateVal && active}\n                selected={selectedDate.toDateString() === d.toDateString()}\n                onClick={setNewSelectedDate}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n);\n\nDatePicker.displayName = 'DatePicker';\n\nexport default DatePicker;\n","import React from 'react';\n\ntype CustomOptionProps = {\n  /**\n   * If the option is currently selected.\n   */\n  selected: boolean;\n  /**\n   * The label to display for the option.\n   */\n  label: string;\n  /**\n   * The value of the option.\n   */\n  value: string;\n  /**\n   * A callback triggered when the option is clicked.\n   */\n  onClick: (v: string) => void;\n  /**\n   * If the option is disabled.\n   */\n  disabled: boolean;\n};\n\n/**\n * Custom Option component.\n */\nconst CustomOption: React.FC<CustomOptionProps> = ({\n  selected,\n  value,\n  label,\n  onClick,\n  disabled,\n}) => {\n  const ref = React.useRef<HTMLButtonElement>(null);\n\n  React.useEffect(() => {\n    if (selected) {\n      ref.current?.scrollIntoView();\n    }\n  }, [selected]);\n\n  return (\n    <button\n      ref={ref}\n      className={`stp--option ${selected ? 'stp--option__active' : ''} ${\n        disabled ? 'stp--option__disabled' : ''\n      }`}\n      type=\"button\"\n      onClick={() => !disabled && onClick(value)}\n      key={value}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default CustomOption;\n","import React from 'react';\nimport CustomOption from './custom-option';\n\nexport type OptionType = {\n  value: string[];\n  disabled: boolean;\n};\n\ntype CustomSelectProps = {\n  /**\n   * The value of the select.\n   */\n  value: string;\n  /**\n   * A callback triggered whenever the value of the select changes.\n   */\n  onChange: (value: string) => void;\n  /**\n   * The options to display in the select.\n   *\n   * Format - [{value: [value, label], disabled: boolean}, ...]\n   */\n  options: OptionType[];\n} & Omit<\n  React.PropsWithChildren<React.HTMLProps<HTMLDivElement>>,\n  'onChange' | 'value'\n>;\n\n/**\n * A custom select component.\n *\n */\nconst CustomSelect: React.FC<CustomSelectProps> = ({\n  value,\n  options,\n  onChange,\n  children,\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [isOpen, setIsOpen] = React.useState<boolean>(false);\n\n  const openOptionsDropdown = React.useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const closeOptionsDropdown = React.useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const handleOptionSelect = React.useCallback(\n    v => {\n      onChange(v);\n      closeOptionsDropdown();\n    },\n    [onChange, closeOptionsDropdown]\n  );\n\n  React.useEffect(() => {\n    if (React.Children.toArray(children).some(c => typeof c !== 'string')) {\n      throw new Error('time-picker: CustomSelect children must be strings');\n    }\n  }, [children]);\n\n  React.useEffect(() => {\n    const clickListener = (e: MouseEvent) => {\n      if (!ref.current?.contains(e.target as Node)) {\n        closeOptionsDropdown();\n      }\n    };\n\n    document.addEventListener('click', clickListener);\n\n    return () => document.removeEventListener('click', clickListener);\n  }, [closeOptionsDropdown]);\n\n  return (\n    <div className=\"stp--select__container\">\n      <div\n        ref={ref}\n        className=\"stp--select\"\n        tabIndex={0}\n        onClick={openOptionsDropdown}\n        onFocus={openOptionsDropdown}\n      >\n        {value}\n      </div>\n      {isOpen && (\n        <div className=\"stp--select__dropdown\">\n          {options.map(({ value: [v, label], disabled }) => (\n            <CustomOption\n              key={v}\n              selected={v === value}\n              value={v}\n              label={label}\n              onClick={handleOptionSelect}\n              disabled={disabled}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomSelect;\n","import React from 'react';\nimport CustomSelect, { OptionType } from './custom-select';\n\nimport './styles.css';\n\n/**\n * Time type\n */\nexport type Time = {\n  hours: number;\n  minutes: number;\n};\n\n/**\n * Props for TimePicker React Component\n */\nexport type TimePickerProps = {\n  /**\n   * This function is called when the selected date is changed.\n   */\n  onChange?: (time: Time) => void;\n  /**\n   * The selected date.\n   */\n  selected?: Time;\n  /**\n   * The minimum time that can be selected - 0 to 23 (inclusive).\n   */\n  minTime?: Time;\n  /**\n   * The maximum time that can be selected - 0 to 23 (inclusive).\n   */\n  maxTime?: Time;\n  /**\n   * The number of minutes between each minute select option - default is 30\n   */\n  minutesInterval?: number;\n} & React.PropsWithRef<\n  Omit<React.HTMLProps<HTMLDivElement>, 'onChange' | 'selected'>\n>;\n\n/**\n *\n * @param time {Time} The time value\n * @param interval {number} The interval between each minute select option\n * @returns {Time} Time value rounded to the nearest interval\n */\nconst alignTime = (\n  { hours, minutes }: Time,\n  interval: number,\n  lower: boolean = true\n): Time => {\n  // round minutes to nearest interval\n  if (minutes % interval !== 0) {\n    minutes = lower\n      ? minutes - (minutes % interval)\n      : minutes + (minutes % interval);\n  }\n  return {\n    hours,\n    minutes,\n  };\n};\n\nconst isMinuteOptionDisabled = (\n  selectedTime: Time,\n  maxTime: Time,\n  minTime: Time,\n  i: number\n): boolean =>\n  selectedTime.hours > maxTime.hours ||\n  selectedTime.hours < minTime.hours ||\n  (selectedTime.hours === maxTime.hours && i > maxTime.minutes) ||\n  (selectedTime.hours === minTime.hours && i < minTime.minutes);\n\n// sane defaults\nconst MIN_TIME = { hours: 0, minutes: 0 };\nconst MAX_TIME = { hours: 23, minutes: 59 };\nconst MINUTES_INTERVAL = 30;\n\n/**\n * TimePicker React Component\n */\nconst TimePicker = React.forwardRef<HTMLDivElement, TimePickerProps>(\n  (\n    {\n      onChange,\n      selected,\n      minTime = MIN_TIME,\n      maxTime = MAX_TIME,\n      minutesInterval = MINUTES_INTERVAL,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    if (\n      typeof minutesInterval !== 'number' &&\n      minutesInterval < 1 &&\n      Number.isInteger(minutesInterval)\n    ) {\n      throw new Error('minutesInterval must be an integer greater than 0');\n    }\n\n    const [selectedTime, setSelectedTime] = React.useState(() => {\n      if (selected !== undefined) {\n        return alignTime(selected, minutesInterval);\n      }\n      const d = new Date();\n      return alignTime(\n        { hours: d.getHours(), minutes: d.getMinutes() },\n        minutesInterval\n      );\n    });\n\n    const handleMinutesChange = React.useCallback(\n      (v: string) => {\n        setSelectedTime(t => {\n          if (t.hours === maxTime.hours && Number(v) > maxTime.minutes) {\n            return alignTime(\n              { ...t, minutes: maxTime.minutes },\n              minutesInterval\n            );\n          } else if (t.hours === minTime.hours && Number(v) < minTime.minutes) {\n            return alignTime(\n              { ...t, minutes: minTime.minutes },\n              minutesInterval,\n              false\n            );\n          } else {\n            return alignTime({ ...t, minutes: Number(v) }, minutesInterval);\n          }\n        });\n      },\n      [minutesInterval, maxTime, minTime]\n    );\n\n    const handleHoursChange = React.useCallback(\n      (v: string) => {\n        setSelectedTime(t => {\n          const h = Number(v);\n          if (h === minTime.hours && t.minutes < minTime.minutes) {\n            return alignTime(\n              { hours: h, minutes: minTime.minutes },\n              minutesInterval,\n              false\n            );\n          } else if (h === maxTime.hours && t.minutes > maxTime.minutes) {\n            return alignTime(\n              { hours: h, minutes: maxTime.minutes },\n              minutesInterval\n            );\n          } else {\n            return alignTime({ ...t, hours: h }, minutesInterval);\n          }\n        });\n      },\n      [minutesInterval, maxTime, minTime]\n    );\n\n    // the array of options for the minutes to select from\n    const minuteOptions = React.useMemo<OptionType[]>(() => {\n      let options: OptionType[] = [];\n      for (let i = 0; i < 60; i += minutesInterval) {\n        options.push({\n          value: [i.toString(), i.toString().padStart(2, '0')],\n          disabled: isMinuteOptionDisabled(selectedTime, maxTime, minTime, i),\n        });\n      }\n      return options;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [minutesInterval, maxTime, minTime, selectedTime.hours]);\n\n    const hourOptions = React.useMemo<OptionType[]>(() => {\n      let options: OptionType[] = [];\n      for (let i = 0; i <= 23; i++) {\n        options.push({\n          value: [i.toString(), i.toString().padStart(2, '0')],\n          disabled: minTime.hours > i || maxTime.hours < i,\n        });\n      }\n      return options;\n    }, [maxTime, minTime]);\n\n    React.useEffect(() => {\n      onChange?.(selectedTime);\n    }, [selectedTime, onChange]);\n\n    React.useEffect(() => {\n      const updatedTime = alignTime(selectedTime, minutesInterval);\n      setSelectedTime(updatedTime);\n      onChange?.(updatedTime);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [minutesInterval]);\n\n    return (\n      <div className={`stp ${className ?? ''}`} {...props} ref={ref}>\n        <CustomSelect\n          className=\"stp--select stp--select__hours\"\n          value={selectedTime.hours.toString().padStart(2, '0')}\n          onChange={handleHoursChange}\n          options={hourOptions}\n        />\n        <p>:</p>\n        <CustomSelect\n          className=\"stp--select stp--select__minutes\"\n          value={selectedTime.minutes.toString().padStart(2, '0')}\n          onChange={handleMinutesChange}\n          options={minuteOptions}\n        />\n      </div>\n    );\n  }\n);\n\nTimePicker.displayName = 'TimePicker';\n\nexport default TimePicker;\n"],"names":["MONTHS","getMonthNameFromNumber","month","Error","getDatesOfMonth","date","firstDayOfMonth","Date","getFullYear","getMonth","lastDayOfMonth","firstDayOfMonthWeekDay","getDay","lastDayOfMonthWeekDay","previousMonth","previousMonthLastDay","nextMonth","dates","i","push","d","getDate","active","MonthPicker","year","prevMonth","React","className","onClick","type","xmlns","width","height","fill","viewBox","points","stroke","strokeLinecap","strokeLinejoin","strokeWidth","tabIndex","dateOptions","weekday","day","DateButton","selected","toLocaleDateString","p","n","DatePicker","forwardRef","ref","onChange","minDate","maxDate","props","minDateVal","getTime","maxDateVal","Number","POSITIVE_INFINITY","useState","monthDate","setMonthDate","selectedDate","setSelectedDate","useCallback","m","y","setNewSelectedDate","map","dVal","key","toDateString","displayName","CustomOption","value","label","disabled","useRef","useEffect","current","scrollIntoView","CustomSelect","options","children","isOpen","setIsOpen","openOptionsDropdown","closeOptionsDropdown","handleOptionSelect","v","Children","toArray","some","c","clickListener","e","contains","target","document","addEventListener","removeEventListener","onFocus","alignTime","interval","lower","hours","minutes","isMinuteOptionDisabled","selectedTime","maxTime","minTime","MIN_TIME","MAX_TIME","MINUTES_INTERVAL","TimePicker","minutesInterval","isInteger","undefined","getHours","getMinutes","setSelectedTime","handleMinutesChange","t","handleHoursChange","h","minuteOptions","useMemo","toString","padStart","hourOptions","updatedTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,MAAM,GAA8B;AACxC,KAAG,SADqC;AAExC,KAAG,UAFqC;AAGxC,KAAG,OAHqC;AAIxC,KAAG,OAJqC;AAKxC,KAAG,KALqC;AAMxC,KAAG,MANqC;AAOxC,KAAG,MAPqC;AAQxC,KAAG,QARqC;AASxC,KAAG,WATqC;AAUxC,KAAG,SAVqC;AAWxC,MAAI,UAXoC;AAYxC,MAAI;AAZoC,CAA1C;AAeO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD;AACpC,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,4BAAmCD,KAAnC,CAAN;AACD;;AACD,SAAOF,MAAM,CAACE,KAAD,CAAb;AACD,CALM;AAOA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AAC7B;AACA;AACA,MAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,WAAL,EAAT,EAA6BH,IAAI,CAACI,QAAL,EAA7B,EAA8C,CAA9C,CAAxB;AACA,MAAMC,cAAc,GAAG,IAAIH,IAAJ,CAASF,IAAI,CAACG,WAAL,EAAT,EAA6BH,IAAI,CAACI,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAvB;AAEA,MAAME,sBAAsB,GAAGL,eAAe,CAACM,MAAhB,EAA/B;AACA,MAAMC,qBAAqB,GAAGH,cAAc,CAACE,MAAf,EAA9B;AAEA,MAAME,aAAa,GAAG,IAAIP,IAAJ,CAASF,IAAI,CAACG,WAAL,EAAT,EAA6BH,IAAI,CAACI,QAAL,EAA7B,EAA8C,CAA9C,CAAtB;AACA,MAAMM,oBAAoB,GAAG,IAAIR,IAAJ,CAC3BO,aAAa,CAACN,WAAd,EAD2B,EAE3BM,aAAa,CAACL,QAAd,KAA2B,CAFA,EAG3B,CAH2B,CAA7B;AAMA,MAAMO,SAAS,GAAG,IAAIT,IAAJ,CAASF,IAAI,CAACG,WAAL,EAAT,EAA6BH,IAAI,CAACI,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAlB;AAEA,MAAMQ,KAAK,GAAmC,EAA9C;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,sBAApB,EAA4CO,CAAC,EAA7C,EAAiD;AAC/CD,IAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,MAAAA,CAAC,EAAE,IAAIb,IAAJ,CACDO,aAAa,CAACN,WAAd,EADC,EAEDM,aAAa,CAACL,QAAd,EAFC,EAGDM,oBAAoB,CAACM,OAArB,KAAiCV,sBAAjC,GAA0DO,CAA1D,GAA8D,CAH7D,CADM;AAMTI,MAAAA,MAAM,EAAE;AANC,KAAX;AAQD;;AAED,OAAK,IAAIJ,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGR,cAAc,CAACW,OAAf,EAApB,EAA8CH,EAAC,EAA/C,EAAmD;AACjDD,IAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,MAAAA,CAAC,EAAE,IAAIb,IAAJ,CAASF,IAAI,CAACG,WAAL,EAAT,EAA6BH,IAAI,CAACI,QAAL,EAA7B,EAA8CS,EAAC,GAAG,CAAlD,CADM;AAETI,MAAAA,MAAM,EAAE;AAFC,KAAX;AAID;;AAED,OAAK,IAAIJ,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,IAAIL,qBAAxB,EAA+CK,GAAC,EAAhD,EAAoD;AAClDD,IAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,MAAAA,CAAC,EAAE,IAAIb,IAAJ,CAASS,SAAS,CAACR,WAAV,EAAT,EAAkCQ,SAAS,CAACP,QAAV,EAAlC,EAAwDS,GAAC,GAAG,CAA5D,CADM;AAETI,MAAAA,MAAM,EAAE;AAFC,KAAX;AAID;;AAED,SAAOL,KAAP;AACD,CA9CM;;ACZP,IAAMM,WAAW,GAA+B,SAA1CA,WAA0C;MAC9CrB,aAAAA;MACAsB,YAAAA;MACAR,iBAAAA;MACAS,iBAAAA;AAEA,SACEC,4BAAA,MAAA;AAAKC,IAAAA,SAAS,EAAC;GAAf,EACED,4BAAA,SAAA;AACEC,IAAAA,SAAS,EAAC;AACVC,IAAAA,OAAO,EAAEH;kBACE;AACXI,IAAAA,IAAI,EAAC;GAJP,EAMEH,4BAAA,MAAA;AACEI,IAAAA,KAAK,EAAC;AACNC,IAAAA,KAAK,EAAC;AACNC,IAAAA,MAAM,EAAC;AACPC,IAAAA,IAAI,EAAC;AACLC,IAAAA,OAAO,EAAC;GALV,EAOER,4BAAA,OAAA;AAAMK,IAAAA,KAAK,EAAC;AAAMC,IAAAA,MAAM,EAAC;AAAMC,IAAAA,IAAI,EAAC;GAApC,CAPF,EAQEP,4BAAA,WAAA;AACES,IAAAA,MAAM,EAAC;AACPF,IAAAA,IAAI,EAAC;AACLG,IAAAA,MAAM,EAAC;AACPC,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GANd,CARF,CANF,CADF,EAyBEb,4BAAA,IAAA;AACEC,IAAAA,SAAS,EAAC;kBACK1B,sBAAsB,CACnCC,KADmC,UAEhCsB;AACLgB,IAAAA,QAAQ,EAAE;GALZ,EAOGvC,sBAAsB,CAACC,KAAD,CAPzB,KAAA,EAOmCsB,IAPnC,CAzBF,EAkCEE,4BAAA,SAAA;AACEC,IAAAA,SAAS,EAAC;AACVC,IAAAA,OAAO,EAAEZ;kBACE;AACXa,IAAAA,IAAI,EAAC;GAJP,EAMEH,4BAAA,MAAA;AACEI,IAAAA,KAAK,EAAC;AACNC,IAAAA,KAAK,EAAC;AACNC,IAAAA,MAAM,EAAC;AACPC,IAAAA,IAAI,EAAC;AACLC,IAAAA,OAAO,EAAC;GALV,EAOER,4BAAA,OAAA;AAAMK,IAAAA,KAAK,EAAC;AAAMC,IAAAA,MAAM,EAAC;AAAMC,IAAAA,IAAI,EAAC;GAApC,CAPF,EAQEP,4BAAA,WAAA;AACES,IAAAA,MAAM,EAAC;AACPF,IAAAA,IAAI,EAAC;AACLG,IAAAA,MAAM,EAAC;AACPC,IAAAA,aAAa,EAAC;AACdC,IAAAA,cAAc,EAAC;AACfC,IAAAA,WAAW,EAAC;GANd,CARF,CANF,CAlCF,CADF;AA6DD,CAnED;;ACDA,IAAME,WAAW,GAA+B;AAC9CC,EAAAA,OAAO,EAAE,MADqC;AAE9CxC,EAAAA,KAAK,EAAE,MAFuC;AAG9CyC,EAAAA,GAAG,EAAE,SAHyC;AAI9CnB,EAAAA,IAAI,EAAE;AAJwC,CAAhD;;AAOA,IAAMoB,UAAU,GAA8B,SAAxCA,UAAwC;AAAA,MAC5CvC,IAD4C,QAC5CA,IAD4C;AAAA,MAE5CiB,MAF4C,QAE5CA,MAF4C;AAAA,MAG5CM,QAH4C,QAG5CA,OAH4C;AAAA,MAI5CiB,QAJ4C,QAI5CA,QAJ4C;AAAA,SAM5CnB,mBAAA,SAAA;AACEC,IAAAA,SAAS,sCACPkB,QAAQ,GAAG,yBAAH,GAA+B,EADhC,qBAEK,CAACvB,MAAD,GAAU,qBAAV,GAAkC,EAFvC;AAGTM,IAAAA,OAAO,EAAE;AAAA,aAAMA,QAAO,CAACvB,IAAD,CAAb;AAAA;AACTmC,IAAAA,QAAQ,EAAElB,MAAM,GAAG,CAAH,GAAO,CAAC;mBAEtBuB,QAAQ,GAAG,oBAAH,GAA0B,kBAChCxC,IAAI,CAACyC,kBAAL,CAAwB,OAAxB,EAAiCL,WAAjC;AACJZ,IAAAA,IAAI,EAAC;GATP,EAWGxB,IAAI,CAACgB,OAAL,EAXH,CAN4C;AAAA,CAA9C;;AAqBA,gCAAeK,UAAA,CACbkB,UADa,EAEb,UAACG,CAAD,EAAIC,CAAJ;AAAA,SACED,CAAC,CAAC1C,IAAF,CAAOO,MAAP,OAAoBoC,CAAC,CAAC3C,IAAF,CAAOO,MAAP,EAApB,IACAmC,CAAC,CAACzB,MAAF,KAAa0B,CAAC,CAAC1B,MADf,IAEAyB,CAAC,CAACF,QAAF,KAAeG,CAAC,CAACH,QAHnB;AAAA,CAFa,CAAf;;ACrCA,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;AAC/B,EAAE,KAAK,GAAG,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AACjC,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;AAC9B;AACA,EAAE,IAAI,CAAC,GAAG,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,EAAE,OAAO,EAAE;AAC1D;AACA,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC9C,EAAE,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC;AAC1B;AACA,EAAE,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC1B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAChD,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC9B,KAAK;AACL,GAAG,MAAM;AACT,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE;AACxB,IAAI,KAAK,CAAC,UAAU,CAAC,OAAO,GAAG,GAAG,CAAC;AACnC,GAAG,MAAM;AACT,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACpD,GAAG;AACH,CAAC;;;;;;ACzBD,AA6BA,IAAMI,UAAU,gBAAGvB,cAAK,CAACwB,UAAN,CACjB,gBASEC,GATF;MAEIC,gBAAAA;2BACAP;MAAAA,sCAAW,IAAItC,IAAJ;0BACX8C;MAAAA,oCAAU,IAAI9C,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB;MACV+C,eAAAA;MACA3B,iBAAAA;MACG4B;;AAIL,MAAMC,UAAU,GAAGH,OAAO,CAACI,OAAR,EAAnB;AACA,MAAMC,UAAU,GACd,OAAOJ,OAAP,KAAmB,WAAnB,GACIK,MAAM,CAACC,iBADX,GAEIN,OAAO,CAACG,OAAR,EAHN;;AAKA,wBAAkC/B,cAAK,CAACmC,QAAN,CAAqBhB,QAArB,CAAlC;AAAA,MAAOiB,SAAP;AAAA,MAAkBC,YAAlB;;AACA,yBAAwCrC,cAAK,CAACmC,QAAN,CAAqBhB,QAArB,CAAxC;AAAA,MAAOmB,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMjD,SAAS,GAAGU,cAAK,CAACwC,WAAN,CAChB;AAAA,WACEH,YAAY,CAAC,UAAA3C,CAAC;AACZ,UAAM+C,CAAC,GAAG/C,CAAC,CAACX,QAAF,EAAV;AACA,UAAM2D,CAAC,GAAGhD,CAAC,CAACZ,WAAF,EAAV;;AACA,UAAI2D,CAAC,KAAK,EAAV,EAAc;AACZ,eAAO,IAAI5D,IAAJ,CAAS6D,CAAC,GAAG,CAAb,EAAgB,CAAhB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAI7D,IAAJ,CAAS6D,CAAT,EAAYD,CAAC,GAAG,CAAhB,CAAP;AACD;AACF,KARW,CADd;AAAA,GADgB,EAWhB,EAXgB,CAAlB;AAcA,MAAM1C,SAAS,GAAGC,cAAK,CAACwC,WAAN,CAChB;AAAA,WACEH,YAAY,CAAC,UAAA3C,CAAC;AACZ,UAAM+C,CAAC,GAAG/C,CAAC,CAACX,QAAF,EAAV;AACA,UAAM2D,CAAC,GAAGhD,CAAC,CAACZ,WAAF,EAAV;;AACA,UAAI2D,CAAC,KAAK,CAAV,EAAa;AACX,eAAO,IAAI5D,IAAJ,CAAS6D,CAAC,GAAG,CAAb,EAAgB,EAAhB,CAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAI7D,IAAJ,CAAS6D,CAAT,EAAYD,CAAC,GAAG,CAAhB,CAAP;AACD;AACF,KARW,CADd;AAAA,GADgB,EAWhB,EAXgB,CAAlB;AAcA,MAAME,kBAAkB,GAAG3C,cAAK,CAACwC,WAAN,CACzB,UAAC7D,IAAD;AACE4D,IAAAA,eAAe,CAAC5D,IAAD,CAAf;AACA+C,IAAAA,QAAQ,QAAR,YAAAA,QAAQ,CAAG/C,IAAH,CAAR;AACD,GAJwB,EAKzB,CAAC+C,QAAD,EAAWa,eAAX,CALyB,CAA3B;;AASA,SACEvC,4BAAA,MAAA;AACEC,IAAAA,SAAS,YAASA,SAAT,WAASA,SAAT,GAAsB,EAAtB;kBACE;AACXa,IAAAA,QAAQ,EAAE;AACVW,IAAAA,GAAG,EAAEA;KACDI,MALN,EAOE7B,4BAAA,CAACH,WAAD;AACErB,IAAAA,KAAK,EAAE4D,SAAS,CAACrD,QAAV;AACPe,IAAAA,IAAI,EAAEsC,SAAS,CAACtD,WAAV;AACNQ,IAAAA,SAAS,EAAEA;AACXS,IAAAA,SAAS,EAAEA;GAJb,CAPF,EAaEC,4BAAA,MAAA;AAAKC,IAAAA,SAAS,EAAC;GAAf,EACED,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,MAAA,CADF,EAEED,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,MAAA,CAFF,EAGED,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,MAAA,CAHF,EAIED,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,MAAA,CAJF,EAKED,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,MAAA,CALF,EAMED,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,MAAA,CANF,EAOED,4BAAA,IAAA;AAAGC,IAAAA,SAAS,EAAC;GAAb,MAAA,CAPF,EAQGvB,eAAe,CAAC0D,SAAD,CAAf,CAA2BQ,GAA3B,CAA+B;QAAGlD,UAAAA;QAAGE,eAAAA;AACpC,QAAMiD,IAAI,GAAGnD,CAAC,CAACqC,OAAF,EAAb;AAEA,WACE/B,4BAAA,CAACkB,YAAD;AACE4B,MAAAA,GAAG,EAAED;AACLlE,MAAAA,IAAI,EAAEe;AACNE,MAAAA,MAAM,EAAEiD,IAAI,IAAIf,UAAR,IAAsBe,IAAI,IAAIb,UAA9B,IAA4CpC;AACpDuB,MAAAA,QAAQ,EAAEmB,YAAY,CAACS,YAAb,OAAgCrD,CAAC,CAACqD,YAAF;AAC1C7C,MAAAA,OAAO,EAAEyC;KALX,CADF;AASD,GAZA,CARH,CAbF,CADF;AAsCD,CAhGgB,CAAnB;AAmGApB,UAAU,CAACyB,WAAX,GAAyB,YAAzB;;;;;ACvGA;;;;AAGA,IAAMC,YAAY,GAAgC,SAA5CA,YAA4C;MAChD9B,gBAAAA;MACA+B,aAAAA;MACAC,aAAAA;MACAjD,gBAAAA;MACAkD,gBAAAA;AAEA,MAAM3B,GAAG,GAAGzB,cAAK,CAACqD,MAAN,CAAgC,IAAhC,CAAZ;AAEArD,EAAAA,cAAK,CAACsD,SAAN,CAAgB;AACd,QAAInC,QAAJ,EAAc;AAAA;;AACZ,sBAAAM,GAAG,CAAC8B,OAAJ,kCAAaC,cAAb;AACD;AACF,GAJD,EAIG,CAACrC,QAAD,CAJH;AAMA,SACEnB,4BAAA,SAAA;AACEyB,IAAAA,GAAG,EAAEA;AACLxB,IAAAA,SAAS,oBAAiBkB,QAAQ,GAAG,qBAAH,GAA2B,EAApD,WACPiC,QAAQ,GAAG,uBAAH,GAA6B,EAD9B;AAGTjD,IAAAA,IAAI,EAAC;AACLD,IAAAA,OAAO,EAAE;AAAA,aAAM,CAACkD,QAAD,IAAalD,QAAO,CAACgD,KAAD,CAA1B;AAAA;AACTJ,IAAAA,GAAG,EAAEI;GAPP,EASGC,KATH,CADF;AAaD,CA5BD;;ACAA;;;;;AAIA,IAAMM,YAAY,GAAgC,SAA5CA,YAA4C;MAChDP,aAAAA;MACAQ,eAAAA;MACAhC,gBAAAA;MACAiC,gBAAAA;AAEA,MAAMlC,GAAG,GAAGzB,cAAK,CAACqD,MAAN,CAA6B,IAA7B,CAAZ;;AACA,wBAA4BrD,cAAK,CAACmC,QAAN,CAAwB,KAAxB,CAA5B;AAAA,MAAOyB,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,mBAAmB,GAAG9D,cAAK,CAACwC,WAAN,CAAkB;AAC5CqB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,MAAME,oBAAoB,GAAG/D,cAAK,CAACwC,WAAN,CAAkB;AAC7CqB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,MAAMG,kBAAkB,GAAGhE,cAAK,CAACwC,WAAN,CACzB,UAAAyB,CAAC;AACCvC,IAAAA,QAAQ,CAACuC,CAAD,CAAR;AACAF,IAAAA,oBAAoB;AACrB,GAJwB,EAKzB,CAACrC,QAAD,EAAWqC,oBAAX,CALyB,CAA3B;AAQA/D,EAAAA,cAAK,CAACsD,SAAN,CAAgB;AACd,QAAItD,cAAK,CAACkE,QAAN,CAAeC,OAAf,CAAuBR,QAAvB,EAAiCS,IAAjC,CAAsC,UAAAC,CAAC;AAAA,aAAI,OAAOA,CAAP,KAAa,QAAjB;AAAA,KAAvC,CAAJ,EAAuE;AACrE,YAAM,IAAI5F,KAAJ,CAAU,oDAAV,CAAN;AACD;AACF,GAJD,EAIG,CAACkF,QAAD,CAJH;AAMA3D,EAAAA,cAAK,CAACsD,SAAN,CAAgB;AACd,QAAMgB,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD;;;AACpB,UAAI,kBAAC9C,GAAG,CAAC8B,OAAL,aAAC,aAAaiB,QAAb,CAAsBD,CAAC,CAACE,MAAxB,CAAD,CAAJ,EAA8C;AAC5CV,QAAAA,oBAAoB;AACrB;AACF,KAJD;;AAMAW,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCL,aAAnC;AAEA,WAAO;AAAA,aAAMI,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCN,aAAtC,CAAN;AAAA,KAAP;AACD,GAVD,EAUG,CAACP,oBAAD,CAVH;AAYA,SACE/D,4BAAA,MAAA;AAAKC,IAAAA,SAAS,EAAC;GAAf,EACED,4BAAA,MAAA;AACEyB,IAAAA,GAAG,EAAEA;AACLxB,IAAAA,SAAS,EAAC;AACVa,IAAAA,QAAQ,EAAE;AACVZ,IAAAA,OAAO,EAAE4D;AACTe,IAAAA,OAAO,EAAEf;GALX,EAOGZ,KAPH,CADF,EAUGU,MAAM,IACL5D,4BAAA,MAAA;AAAKC,IAAAA,SAAS,EAAC;GAAf,EACGyD,OAAO,CAACd,GAAR,CAAY;AAAA,4BAAGM,KAAH;AAAA,QAAWe,CAAX;AAAA,QAAcd,KAAd;AAAA,QAAsBC,QAAtB,SAAsBA,QAAtB;AAAA,WACXpD,4BAAA,CAACiD,YAAD;AACEH,MAAAA,GAAG,EAAEmB;AACL9C,MAAAA,QAAQ,EAAE8C,CAAC,KAAKf;AAChBA,MAAAA,KAAK,EAAEe;AACPd,MAAAA,KAAK,EAAEA;AACPjD,MAAAA,OAAO,EAAE8D;AACTZ,MAAAA,QAAQ,EAAEA;KANZ,CADW;AAAA,GAAZ,CADH,CAXJ,CADF;AA2BD,CAtED;;;;;;AChCA,AAyCA;;;;;;;AAMA,IAAM0B,SAAS,GAAG,SAAZA,SAAY,OAEhBC,QAFgB,EAGhBC,KAHgB;MACdC,aAAAA;MAAOC,eAAAA;;MAETF;AAAAA,IAAAA,QAAiB;;;AAEjB;AACA,MAAIE,OAAO,GAAGH,QAAV,KAAuB,CAA3B,EAA8B;AAC5BG,IAAAA,OAAO,GAAGF,KAAK,GACXE,OAAO,GAAIA,OAAO,GAAGH,QADV,GAEXG,OAAO,GAAIA,OAAO,GAAGH,QAFzB;AAGD;;AACD,SAAO;AACLE,IAAAA,KAAK,EAALA,KADK;AAELC,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CAfD;;AAiBA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAC7BC,YAD6B,EAE7BC,OAF6B,EAG7BC,OAH6B,EAI7B9F,CAJ6B;AAAA,SAM7B4F,YAAY,CAACH,KAAb,GAAqBI,OAAO,CAACJ,KAA7B,IACAG,YAAY,CAACH,KAAb,GAAqBK,OAAO,CAACL,KAD7B,IAECG,YAAY,CAACH,KAAb,KAAuBI,OAAO,CAACJ,KAA/B,IAAwCzF,CAAC,GAAG6F,OAAO,CAACH,OAFrD,IAGCE,YAAY,CAACH,KAAb,KAAuBK,OAAO,CAACL,KAA/B,IAAwCzF,CAAC,GAAG8F,OAAO,CAACJ,OATxB;AAAA,CAA/B;;;AAYA,IAAMK,QAAQ,GAAG;AAAEN,EAAAA,KAAK,EAAE,CAAT;AAAYC,EAAAA,OAAO,EAAE;AAArB,CAAjB;AACA,IAAMM,QAAQ,GAAG;AAAEP,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,OAAO,EAAE;AAAtB,CAAjB;AACA,IAAMO,gBAAgB,GAAG,EAAzB;AAEA;;;;AAGA,IAAMC,UAAU,gBAAG1F,cAAK,CAACwB,UAAN,CACjB,iBAUEC,GAVF;MAEIC,iBAAAA;MACAP,iBAAAA;4BACAmE;MAAAA,qCAAUC;4BACVF;MAAAA,qCAAUG;oCACVG;MAAAA,qDAAkBF;MAClBxF,kBAAAA;MACG4B;;AAIL,MACE,OAAO8D,eAAP,KAA2B,QAA3B,IACAA,eAAe,GAAG,CADlB,IAEA1D,MAAM,CAAC2D,SAAP,CAAiBD,eAAjB,CAHF,EAIE;AACA,UAAM,IAAIlH,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAED,wBAAwCuB,cAAK,CAACmC,QAAN,CAAe;AACrD,QAAIhB,QAAQ,KAAK0E,SAAjB,EAA4B;AAC1B,aAAOf,SAAS,CAAC3D,QAAD,EAAWwE,eAAX,CAAhB;AACD;;AACD,QAAMjG,CAAC,GAAG,IAAIb,IAAJ,EAAV;AACA,WAAOiG,SAAS,CACd;AAAEG,MAAAA,KAAK,EAAEvF,CAAC,CAACoG,QAAF,EAAT;AAAuBZ,MAAAA,OAAO,EAAExF,CAAC,CAACqG,UAAF;AAAhC,KADc,EAEdJ,eAFc,CAAhB;AAID,GATuC,CAAxC;AAAA,MAAOP,YAAP;AAAA,MAAqBY,eAArB;;AAWA,MAAMC,mBAAmB,GAAGjG,cAAK,CAACwC,WAAN,CAC1B,UAACyB,CAAD;AACE+B,IAAAA,eAAe,CAAC,UAAAE,CAAC;AACf,UAAIA,CAAC,CAACjB,KAAF,KAAYI,OAAO,CAACJ,KAApB,IAA6BhD,MAAM,CAACgC,CAAD,CAAN,GAAYoB,OAAO,CAACH,OAArD,EAA8D;AAC5D,eAAOJ,SAAS,cACToB,CADS;AACNhB,UAAAA,OAAO,EAAEG,OAAO,CAACH;AADX,YAEdS,eAFc,CAAhB;AAID,OALD,MAKO,IAAIO,CAAC,CAACjB,KAAF,KAAYK,OAAO,CAACL,KAApB,IAA6BhD,MAAM,CAACgC,CAAD,CAAN,GAAYqB,OAAO,CAACJ,OAArD,EAA8D;AACnE,eAAOJ,SAAS,cACToB,CADS;AACNhB,UAAAA,OAAO,EAAEI,OAAO,CAACJ;AADX,YAEdS,eAFc,EAGd,KAHc,CAAhB;AAKD,OANM,MAMA;AACL,eAAOb,SAAS,cAAMoB,CAAN;AAAShB,UAAAA,OAAO,EAAEjD,MAAM,CAACgC,CAAD;AAAxB,YAA+B0B,eAA/B,CAAhB;AACD;AACF,KAfc,CAAf;AAgBD,GAlByB,EAmB1B,CAACA,eAAD,EAAkBN,OAAlB,EAA2BC,OAA3B,CAnB0B,CAA5B;AAsBA,MAAMa,iBAAiB,GAAGnG,cAAK,CAACwC,WAAN,CACxB,UAACyB,CAAD;AACE+B,IAAAA,eAAe,CAAC,UAAAE,CAAC;AACf,UAAME,CAAC,GAAGnE,MAAM,CAACgC,CAAD,CAAhB;;AACA,UAAImC,CAAC,KAAKd,OAAO,CAACL,KAAd,IAAuBiB,CAAC,CAAChB,OAAF,GAAYI,OAAO,CAACJ,OAA/C,EAAwD;AACtD,eAAOJ,SAAS,CACd;AAAEG,UAAAA,KAAK,EAAEmB,CAAT;AAAYlB,UAAAA,OAAO,EAAEI,OAAO,CAACJ;AAA7B,SADc,EAEdS,eAFc,EAGd,KAHc,CAAhB;AAKD,OAND,MAMO,IAAIS,CAAC,KAAKf,OAAO,CAACJ,KAAd,IAAuBiB,CAAC,CAAChB,OAAF,GAAYG,OAAO,CAACH,OAA/C,EAAwD;AAC7D,eAAOJ,SAAS,CACd;AAAEG,UAAAA,KAAK,EAAEmB,CAAT;AAAYlB,UAAAA,OAAO,EAAEG,OAAO,CAACH;AAA7B,SADc,EAEdS,eAFc,CAAhB;AAID,OALM,MAKA;AACL,eAAOb,SAAS,cAAMoB,CAAN;AAASjB,UAAAA,KAAK,EAAEmB;AAAhB,YAAqBT,eAArB,CAAhB;AACD;AACF,KAhBc,CAAf;AAiBD,GAnBuB,EAoBxB,CAACA,eAAD,EAAkBN,OAAlB,EAA2BC,OAA3B,CApBwB,CAA1B;;AAwBA,MAAMe,aAAa,GAAGrG,cAAK,CAACsG,OAAN,CAA4B;AAChD,QAAI5C,OAAO,GAAiB,EAA5B;;AACA,SAAK,IAAIlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAImG,eAA7B,EAA8C;AAC5CjC,MAAAA,OAAO,CAACjE,IAAR,CAAa;AACXyD,QAAAA,KAAK,EAAE,CAAC1D,CAAC,CAAC+G,QAAF,EAAD,EAAe/G,CAAC,CAAC+G,QAAF,GAAaC,QAAb,CAAsB,CAAtB,EAAyB,GAAzB,CAAf,CADI;AAEXpD,QAAAA,QAAQ,EAAE+B,sBAAsB,CAACC,YAAD,EAAeC,OAAf,EAAwBC,OAAxB,EAAiC9F,CAAjC;AAFrB,OAAb;AAID;;AACD,WAAOkE,OAAP;AAED,GAVqB,EAUnB,CAACiC,eAAD,EAAkBN,OAAlB,EAA2BC,OAA3B,EAAoCF,YAAY,CAACH,KAAjD,CAVmB,CAAtB;AAYA,MAAMwB,WAAW,GAAGzG,cAAK,CAACsG,OAAN,CAA4B;AAC9C,QAAI5C,OAAO,GAAiB,EAA5B;;AACA,SAAK,IAAIlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BkE,MAAAA,OAAO,CAACjE,IAAR,CAAa;AACXyD,QAAAA,KAAK,EAAE,CAAC1D,CAAC,CAAC+G,QAAF,EAAD,EAAe/G,CAAC,CAAC+G,QAAF,GAAaC,QAAb,CAAsB,CAAtB,EAAyB,GAAzB,CAAf,CADI;AAEXpD,QAAAA,QAAQ,EAAEkC,OAAO,CAACL,KAAR,GAAgBzF,CAAhB,IAAqB6F,OAAO,CAACJ,KAAR,GAAgBzF;AAFpC,OAAb;AAID;;AACD,WAAOkE,OAAP;AACD,GATmB,EASjB,CAAC2B,OAAD,EAAUC,OAAV,CATiB,CAApB;AAWAtF,EAAAA,cAAK,CAACsD,SAAN,CAAgB;AACd5B,IAAAA,QAAQ,QAAR,YAAAA,QAAQ,CAAG0D,YAAH,CAAR;AACD,GAFD,EAEG,CAACA,YAAD,EAAe1D,QAAf,CAFH;AAIA1B,EAAAA,cAAK,CAACsD,SAAN,CAAgB;AACd,QAAMoD,WAAW,GAAG5B,SAAS,CAACM,YAAD,EAAeO,eAAf,CAA7B;AACAK,IAAAA,eAAe,CAACU,WAAD,CAAf;AACAhF,IAAAA,QAAQ,QAAR,YAAAA,QAAQ,CAAGgF,WAAH,CAAR;AAED,GALD,EAKG,CAACf,eAAD,CALH;AAOA,SACE3F,4BAAA,MAAA;AAAKC,IAAAA,SAAS,YAASA,SAAT,WAASA,SAAT,GAAsB,EAAtB;KAAgC4B;AAAOJ,IAAAA,GAAG,EAAEA;IAA1D,EACEzB,4BAAA,CAACyD,YAAD;AACExD,IAAAA,SAAS,EAAC;AACViD,IAAAA,KAAK,EAAEkC,YAAY,CAACH,KAAb,CAAmBsB,QAAnB,GAA8BC,QAA9B,CAAuC,CAAvC,EAA0C,GAA1C;AACP9E,IAAAA,QAAQ,EAAEyE;AACVzC,IAAAA,OAAO,EAAE+C;GAJX,CADF,EAOEzG,4BAAA,IAAA,MAAA,KAAA,CAPF,EAQEA,4BAAA,CAACyD,YAAD;AACExD,IAAAA,SAAS,EAAC;AACViD,IAAAA,KAAK,EAAEkC,YAAY,CAACF,OAAb,CAAqBqB,QAArB,GAAgCC,QAAhC,CAAyC,CAAzC,EAA4C,GAA5C;AACP9E,IAAAA,QAAQ,EAAEuE;AACVvC,IAAAA,OAAO,EAAE2C;GAJX,CARF,CADF;AAiBD,CAjIgB,CAAnB;AAoIAX,UAAU,CAAC1C,WAAX,GAAyB,YAAzB;;;;;"}